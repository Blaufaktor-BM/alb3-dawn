{%- liquid
  assign fetch_priority = 'auto'
-%}
{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
<div class="section-anchor_contact section-{{ section.id }}-padding">
  <div class="page-width">
    <div
      class="wrapper-anchor_contact isolate{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
    >
      <div class="anchor_contact-list">
        <div id="toc"></div>
      </div>
      <div class="anchor_contact-info">
        {% if section.settings.image != blank %}
          <div class="anchor_contact-img">
            {%- assign fetch_priority = 'auto' -%}
            {%- assign widths = '165, 360, 535, 750, 1070, 1500' -%}
            {%- capture sizes -%}
              (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px,
              (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)
            {%- endcapture -%}

            {{
              section.settings.image
              | image_url: width: 1500
              | image_tag: sizes: sizes, widths: widths, fetchpriority: fetch_priority
            }}
          </div>
        {% endif %}
        {% if section.settings.text != blank %}
          <div class="anchor_contact-text rte">{{ section.settings.text }}</div>
        {% endif %}
        {% if section.settings.social_title != blank %}
          <div class="anchor_contact-social_title">{{ section.settings.social_title }}</div>
        {% endif %}
        <div class="anchor_contact-social_list">
          {% for i in (1..5) %}
            {% capture icon %} icon{{ forloop.index }} {% endcapture %}
            {% capture url %} url{{ forloop.index }} {% endcapture %}
            {% if icon != blank %}
              <a class="social-item" href="{{ section.settings[url] }}">{{ section.settings[icon] }}</a>
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>
</div>
<script>
  function getToC() {
    var title,
      link,
      iter = 0,
      tocfound = false;

    // alle Heading Element sammeln
    var hElements = [];
    $('.main-content h2, .main-content h3, .main-content h4').each(function (i, e) {
      hElements.push($(this));
    });
    hElements = unique(hElements);
    //console.log(hElements);

    // ToC wrapper
    var ToC = "<nav role='navigation'>";
    ToC += '<ul style="--text-indent: 0px; --line-spacing: 3px;">';

    $(hElements).each(function (i, e) {
      lastHeadingIndex = typeof hElements[i - 1] === 'undefined' ? 0 : hElements[i - 1].prop('tagName').substring(1);
      currentHeadingIndex = e.prop('tagName').substring(1);
      nextHeadingIndex = typeof hElements[i + 1] === 'undefined' ? 0 : hElements[i + 1].prop('tagName').substring(1);

      // toc-found = TOC Verzeichnis erst erstellen mit Überschriften nach dem Inhaltsverzeichnis
      if (e.attr('id') == 'toc') tocfound = true;

      e.attr('id', 'nav_' + i); // überschriften mit anker elementen versehen
      title = e.text();
      link = '#' + e.attr('id');

      if (e.prop('nodeName') != 'H1') {
        if (nextHeadingIndex > currentHeadingIndex) {
          ToC += '<li><a href="' + link + '">' + title + '</a>';
          ToC += '<ul class="subtoc">';
        }
        if (nextHeadingIndex == currentHeadingIndex) {
          ToC += '<li><a href="' + link + '">' + title + '</a></li>';
        }
        if (nextHeadingIndex < currentHeadingIndex) {
          ToC += '<li><a href="' + link + '">' + title + '</a></li>';
          ToC += '</ul>';
          if (currentHeadingIndex - nextHeadingIndex == 2) {
            // sprung von h4 auf h2
            ToC += '</li></ul>';
          }
        }
      }
      iter++;
    });

    // ToC Wrapper Close
    ToC += '</ul></nav>';
    if (iter > 1) return ToC;
    else return '';
  }

  document.addEventListener('DOMContentLoaded', function (event) {
    deferAutorbox();
  });
</script>
{% schema %}
{
  "name": "Anchor & Contact",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Text",
      "default": "<p>Autor: Benjamin Maywald<br>Position: Co-Founder Alb Filter<br>Aktualisiert am:</p>"
    },
    {
      "type": "inline_richtext",
      "id": "social_title",
      "label": "Social Title",
      "default": "Jetzt teilen!"
    },
    {
      "type": "image_picker",
      "id": "icon1",
      "label": "Icon1"
    },
    {
      "type": "url",
      "id": "url1",
      "label": "URL1"
    },
    {
      "type": "image_picker",
      "id": "icon2",
      "label": "Icon2"
    },
    {
      "type": "url",
      "id": "url2",
      "label": "URL2"
    },
    {
      "type": "image_picker",
      "id": "icon3",
      "label": "Icon3"
    },
    {
      "type": "url",
      "id": "url3",
      "label": "URL3"
    },
    {
      "type": "image_picker",
      "id": "icon4",
      "label": "Icon4"
    },
    {
      "type": "url",
      "id": "url4",
      "label": "URL4"
    },
    {
      "type": "image_picker",
      "id": "icon5",
      "label": "Icon5"
    },
    {
      "type": "url",
      "id": "url5",
      "label": "URL5"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 10
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 0
    }
  ],
  "presets": [
    {
      "name": "Anchor & Contact"
    }
  ]
}
{% endschema %}
